import { NextRequest, NextResponse } from 'next/server';

interface NewsItem {
  title: string;
  link: string;
  pubDate: string;
  description: string;
  source: string;
}

interface TranslatedHeadline {
  title_zh: string;
  source: string;
  url: string;
  score: number;
}

// Keywords for scoring financial news importance
const FINANCE_KEYWORDS = [
  // Economic indicators
  'inflation', 'cpi', 'ppi', 'gdp', 'unemployment', 'employment',
  'interest rate', 'fed', 'federal reserve', 'monetary policy',
  'fiscal policy', 'budget', 'deficit', 'surplus',
  
  // Market events
  'market crash', 'bull market', 'bear market', 'recession',
  'boom', 'bubble', 'correction', 'rally',
  
  // Companies and sectors
  'earnings', 'revenue', 'profit', 'loss', 'merger', 'acquisition',
  'ipo', 'stock split', 'dividend', 'buyback',
  
  // Global events
  'trade war', 'tariff', 'sanction', 'embargo',
  'brexit', 'eurozone', 'china', 'russia', 'ukraine',
  
  // Technology
  'ai', 'artificial intelligence', 'cryptocurrency', 'bitcoin',
  'blockchain', 'fintech', 'digital currency',
  
  // Energy and commodities
  'oil', 'gas', 'energy', 'renewable', 'solar', 'wind',
  'gold', 'silver', 'commodities', 'precious metals'
];

// Score a headline based on financial keywords
function scoreHeadline(title: string, description: string): number {
  const text = `${title} ${description}`.toLowerCase();
  let score = 0;
  
  FINANCE_KEYWORDS.forEach(keyword => {
    const regex = new RegExp(keyword, 'gi');
    const matches = text.match(regex);
    if (matches) {
      score += matches.length * (keyword.length > 10 ? 2 : 1); // Longer keywords get more weight
    }
  });
  
  // Bonus for breaking news indicators
  const breakingKeywords = ['breaking', 'urgent', 'alert', 'update', 'latest'];
  breakingKeywords.forEach(keyword => {
    if (text.includes(keyword)) {
      score += 3;
    }
  });
  
  // Bonus for recent news (within last hour gets +5, last 6 hours gets +2)
  const now = new Date();
  const pubDate = new Date();
  const timeDiff = now.getTime() - pubDate.getTime();
  const hoursDiff = timeDiff / (1000 * 60 * 60);
  
  if (hoursDiff < 1) score += 5;
  else if (hoursDiff < 6) score += 2;
  
  return Math.min(score, 20); // Cap at 20
}

// Simple translation function (fallback when OpenAI is not available)
function simpleTranslate(text: string): string {
  // This is a very basic translation mapping for common financial terms
  const translations: { [key: string]: string } = {
    // Basic financial terms
    'Federal Reserve': '美联储',
    'interest rate': '利率',
    'rate cuts': '降息',
    'economic uncertainty': '经济不确定性',
    'inflation': '通货膨胀',
    'economic growth': '经济增长',
    'Tech Stocks': '科技股',
    'AI Investments': 'AI投资',
    'market optimism': '市场乐观情绪',
    'Oil Prices': '油价',
    'Middle East Tensions': '中东紧张局势',
    'supply disruptions': '供应中断',
    'Gold': '黄金',
    'Safe Haven': '避险',
    'Cryptocurrency': '加密货币',
    'Bitcoin': '比特币',
    'regulatory developments': '监管发展',
    'European Markets': '欧洲市场',
    'economic data': '经济数据',
    'China': '中国',
    'Manufacturing PMI': '制造业PMI',
    'economic recovery': '经济复苏',
    'Banking Sector': '银行业',
    'Rising Interest Rates': '利率上升',
    'Renewable Energy': '可再生能源',
    'policy support': '政策支持',
    'Retail Sales': '零售销售',
    'consumer spending': '消费者支出',
    'Housing Market': '房地产市场',
    'stabilization': '稳定',
    'Supply Chain': '供应链',
    'disruptions': '中断',
    'trade flows': '贸易流动',
    'bottlenecks': '瓶颈',
    'inflation': '通货膨胀',
    'interest rate': '利率',
    'fed': '美联储',
    'federal reserve': '美联储',
    'market': '市场',
    'stock': '股票',
    'earnings': '收益',
    'revenue': '收入',
    'profit': '利润',
    'loss': '亏损',
    'economy': '经济',
    'recession': '衰退',
    'growth': '增长',
    'unemployment': '失业率',
    'employment': '就业',
    'gdp': '国内生产总值',
    'cpi': '消费者价格指数',
    'trade': '贸易',
    'tariff': '关税',
    'china': '中国',
    'europe': '欧洲',
    'japan': '日本',
    'uk': '英国',
    'cryptocurrency': '加密货币',
    'bitcoin': '比特币',
    'ai': '人工智能',
    'artificial intelligence': '人工智能',
    'oil': '石油',
    'gold': '黄金',
    'dollar': '美元',
    'euro': '欧元',
    'yen': '日元',
    'pound': '英镑',
    'yuan': '人民币',
    'crisis': '危机',
    'boom': '繁荣',
    'crash': '崩盘',
    'rally': '反弹',
    'correction': '调整',
    'bubble': '泡沫',
    'merger': '合并',
    'acquisition': '收购',
    'ipo': '首次公开募股',
    'dividend': '股息',
    'buyback': '回购',
    'earnings report': '财报',
    'quarterly': '季度',
    'annual': '年度',
    'forecast': '预测',
    'outlook': '展望',
    'guidance': '指引',
    'analyst': '分析师',
    'rating': '评级',
    'upgrade': '上调',
    'downgrade': '下调',
    'target price': '目标价',
    'valuation': '估值',
    'volatility': '波动性',
    'liquidity': '流动性',
    'leverage': '杠杆',
    'debt': '债务',
    'credit': '信贷',
    'bond': '债券',
    'yield': '收益率',
    'spread': '利差',
    'default': '违约',
    'bankruptcy': '破产',
    'restructuring': '重组',
    'layoff': '裁员',
    'hiring': '招聘',
    'wage': '工资',
    'salary': '薪资',
    'bonus': '奖金',
    'pension': '养老金',
    'retirement': '退休',
    'social security': '社会保障',
    'medicare': '医疗保险',
    'medicaid': '医疗补助',
    'tax': '税收',
    'deduction': '扣除',
    'exemption': '豁免',
    'refund': '退税',
    'audit': '审计',
    'compliance': '合规',
    'regulation': '监管',
    'policy': '政策',
    'reform': '改革',
    'legislation': '立法',
    'congress': '国会',
    'senate': '参议院',
    'house': '众议院',
    'president': '总统',
    'governor': '州长',
    'mayor': '市长',
    'election': '选举',
    'campaign': '竞选',
    'vote': '投票',
    'poll': '民调',
    'approval': '支持率',
    'rating': '评级',
    'popularity': '人气',
    'support': '支持',
    'opposition': '反对',
    'criticism': '批评',
    'praise': '赞扬',
    'endorsement': '背书',
    'endorse': '支持',
    'oppose': '反对',
    'support': '支持',
    'back': '支持',
    'favor': '赞成',
    'against': '反对',
    'pro': '支持',
    'con': '反对',
    'positive': '积极',
    'negative': '消极',
    'optimistic': '乐观',
    'pessimistic': '悲观',
    'bullish': '看涨',
    'bearish': '看跌',
    'neutral': '中性',
    'mixed': '混合',
    'uncertain': '不确定',
    'volatile': '波动',
    'stable': '稳定',
    'steady': '稳定',
    'strong': '强劲',
    'weak': '疲软',
    'robust': '强劲',
    'fragile': '脆弱',
    'resilient': '有弹性',
    'vulnerable': '脆弱',
    'resistant': '抗性',
    'susceptible': '易受影响',
    'immune': '免疫',
    'protected': '受保护',
    'exposed': '暴露',
    'at risk': '有风险',
    'safe': '安全',
    'secure': '安全',
    'risky': '有风险',
    'dangerous': '危险',
    'threat': '威胁',
    'opportunity': '机会',
    'challenge': '挑战',
    'advantage': '优势',
    'disadvantage': '劣势',
    'benefit': '好处',
    'cost': '成本',
    'price': '价格',
    'value': '价值',
    'worth': '价值',
    'expensive': '昂贵',
    'cheap': '便宜',
    'affordable': '负担得起',
    'luxury': '奢侈品',
    'premium': '高端',
    'budget': '预算',
    'economy': '经济',
    'basic': '基本',
    'standard': '标准',
    'deluxe': '豪华',
    'exclusive': '独家',
    'limited': '限量',
    'unlimited': '无限',
    'free': '免费',
    'paid': '付费',
    'subscription': '订阅',
    'membership': '会员',
    'loyalty': '忠诚度',
    'reward': '奖励',
    'incentive': '激励',
    'bonus': '奖金',
    'discount': '折扣',
    'sale': '销售',
    'promotion': '促销',
    'marketing': '营销',
    'advertising': '广告',
    'brand': '品牌',
    'reputation': '声誉',
    'image': '形象',
    'identity': '身份',
    'culture': '文化',
    'tradition': '传统',
    'innovation': '创新',
    'technology': '技术',
    'digital': '数字',
    'online': '在线',
    'offline': '离线',
    'virtual': '虚拟',
    'real': '真实',
    'artificial': '人工',
    'natural': '自然',
    'organic': '有机',
    'synthetic': '合成',
    'renewable': '可再生',
    'sustainable': '可持续',
    'green': '绿色',
    'clean': '清洁',
    'dirty': '脏',
    'pollution': '污染',
    'environment': '环境',
    'climate': '气候',
    'weather': '天气',
    'temperature': '温度',
    'heat': '热',
    'cold': '冷',
    'warm': '温暖',
    'cool': '凉爽',
    'hot': '热',
    'freezing': '冰冻',
    'boiling': '沸腾',
    'melting': '融化',
    'freezing': '结冰',
    'thawing': '解冻',
    'warming': '变暖',
    'cooling': '变冷',
    'heating': '加热',
    'cooling': '冷却',
    'insulation': '绝缘',
    'conduction': '传导',
    'convection': '对流',
    'radiation': '辐射',
    'energy': '能源',
    'power': '电力',
    'electricity': '电',
    'battery': '电池',
    'solar': '太阳能',
    'wind': '风能',
    'nuclear': '核能',
    'fossil': '化石',
    'coal': '煤炭',
    'gas': '天然气',
    'oil': '石油',
    'petroleum': '石油',
    'diesel': '柴油',
    'gasoline': '汽油',
    'fuel': '燃料',
    'combustion': '燃烧',
    'emission': '排放',
    'carbon': '碳',
    'co2': '二氧化碳',
    'greenhouse': '温室',
    'effect': '效应',
    'global': '全球',
    'warming': '变暖',
    'change': '变化',
    'adaptation': '适应',
    'mitigation': '缓解',
    'reduction': '减少',
    'increase': '增加',
    'growth': '增长',
    'decline': '下降',
    'rise': '上升',
    'fall': '下降',
    'drop': '下降',
    'jump': '跳跃',
    'surge': '激增',
    'spike': '飙升',
    'plunge': '暴跌',
    'crash': '崩盘',
    'rally': '反弹',
    'recovery': '复苏',
    'rebound': '反弹',
    'bounce': '反弹',
    'correction': '调整',
    'adjustment': '调整',
    'revision': '修正',
    'update': '更新',
    'upgrade': '升级',
    'downgrade': '降级',
    'improvement': '改善',
    'deterioration': '恶化',
    'progress': '进步',
    'regress': '倒退',
    'advance': '前进',
    'retreat': '撤退',
    'forward': '向前',
    'backward': '向后',
    'ahead': '领先',
    'behind': '落后',
    'above': '以上',
    'below': '以下',
    'over': '超过',
    'under': '低于',
    'more': '更多',
    'less': '更少',
    'most': '最多',
    'least': '最少',
    'best': '最好',
    'worst': '最差',
    'better': '更好',
    'worse': '更差',
    'good': '好',
    'bad': '坏',
    'great': '伟大',
    'terrible': '可怕',
    'excellent': '优秀',
    'poor': '差',
    'outstanding': '杰出',
    'mediocre': '平庸',
    'superior': '优越',
    'inferior': '劣等',
    'premium': '高端',
    'budget': '预算',
    'quality': '质量',
    'quantity': '数量',
    'amount': '数量',
    'number': '数字',
    'count': '计数',
    'total': '总计',
    'sum': '总和',
    'average': '平均',
    'mean': '平均值',
    'median': '中位数',
    'mode': '众数',
    'range': '范围',
    'scope': '范围',
    'extent': '程度',
    'level': '水平',
    'degree': '程度',
    'rate': '比率',
    'ratio': '比例',
    'percentage': '百分比',
    'percent': '百分比',
    'portion': '部分',
    'part': '部分',
    'section': '部分',
    'segment': '部分',
    'division': '部门',
    'department': '部门',
    'unit': '单位',
    'group': '组',
    'team': '团队',
    'crew': '团队',
    'staff': '员工',
    'employee': '员工',
    'worker': '工人',
    'labor': '劳动',
    'work': '工作',
    'job': '工作',
    'career': '职业',
    'profession': '职业',
    'occupation': '职业',
    'position': '职位',
    'role': '角色',
    'function': '功能',
    'duty': '职责',
    'responsibility': '责任',
    'obligation': '义务',
    'commitment': '承诺',
    'promise': '承诺',
    'agreement': '协议',
    'contract': '合同',
    'deal': '交易',
    'transaction': '交易',
    'exchange': '交换',
    'trade': '贸易',
    'commerce': '商业',
    'business': '商业',
    'industry': '行业',
    'sector': '部门',
    'field': '领域',
    'area': '区域',
    'region': '地区',
    'zone': '区域',
    'territory': '领土',
    'country': '国家',
    'nation': '国家',
    'state': '州',
    'province': '省',
    'city': '城市',
    'town': '城镇',
    'village': '村庄',
    'community': '社区',
    'society': '社会',
    'population': '人口',
    'people': '人民',
    'citizen': '公民',
    'resident': '居民',
    'inhabitant': '居民',
    'local': '本地',
    'national': '国家',
    'international': '国际',
    'global': '全球',
    'worldwide': '全球',
    'universal': '通用',
    'general': '一般',
    'specific': '具体',
    'particular': '特定',
    'special': '特殊',
    'unique': '独特',
    'common': '常见',
    'rare': '罕见',
    'frequent': '频繁',
    'occasional': '偶尔',
    'regular': '定期',
    'irregular': '不规则',
    'normal': '正常',
    'abnormal': '异常',
    'typical': '典型',
    'atypical': '非典型',
    'standard': '标准',
    'non-standard': '非标准',
    'conventional': '传统',
    'unconventional': '非传统',
    'traditional': '传统',
    'modern': '现代',
    'contemporary': '当代',
    'current': '当前',
    'present': '现在',
    'past': '过去',
    'future': '未来',
    'recent': '最近',
    'latest': '最新',
    'newest': '最新',
    'oldest': '最旧',
    'new': '新',
    'old': '旧',
    'young': '年轻',
    'aged': '年老',
    'fresh': '新鲜',
    'stale': '陈旧',
    'recent': '最近',
    'ancient': '古老',
    'historic': '历史',
    'historical': '历史',
    'classic': '经典',
    'vintage': '复古',
    'antique': '古董',
    'modern': '现代',
    'contemporary': '当代',
    'current': '当前',
    'present': '现在',
    'today': '今天',
    'yesterday': '昨天',
    'tomorrow': '明天',
    'now': '现在',
    'then': '然后',
    'when': '何时',
    'where': '哪里',
    'why': '为什么',
    'how': '如何',
    'what': '什么',
    'who': '谁',
    'which': '哪个',
    'whose': '谁的',
    'whom': '谁',
    'this': '这个',
    'that': '那个',
    'these': '这些',
    'those': '那些',
    'here': '这里',
    'there': '那里',
    'everywhere': '到处',
    'nowhere': '无处',
    'somewhere': '某处',
    'anywhere': '任何地方',
    'inside': '里面',
    'outside': '外面',
    'within': '在...内',
    'without': '没有',
    'with': '和',
    'against': '反对',
    'for': '为了',
    'about': '关于',
    'around': '周围',
    'through': '通过',
    'across': '穿过',
    'over': '超过',
    'under': '在...下',
    'above': '在...上',
    'below': '在...下',
    'up': '上',
    'down': '下',
    'left': '左',
    'right': '右',
    'front': '前',
    'back': '后',
    'top': '顶',
    'bottom': '底',
    'middle': '中间',
    'center': '中心',
    'edge': '边缘',
    'corner': '角落',
    'side': '边',
    'end': '结束',
    'beginning': '开始',
    'start': '开始',
    'finish': '完成',
    'complete': '完成',
    'finish': '完成',
    'done': '完成',
    'finished': '完成',
    'completed': '完成',
    'incomplete': '不完整',
    'unfinished': '未完成',
    'partial': '部分',
    'full': '完整',
    'empty': '空',
    'filled': '填满',
    'occupied': '占用',
    'vacant': '空',
    'available': '可用',
    'unavailable': '不可用',
    'free': '免费',
    'busy': '忙碌',
    'idle': '空闲',
    'active': '活跃',
    'inactive': '不活跃',
    'working': '工作',
    'broken': '损坏',
    'fixed': '固定',
    'repair': '修理',
    'maintenance': '维护',
    'service': '服务',
    'support': '支持',
    'help': '帮助',
    'assistance': '协助',
    'aid': '援助',
    'relief': '救济',
    'rescue': '救援',
    'save': '拯救',
    'protect': '保护',
    'defend': '防御',
    'guard': '守卫',
    'secure': '安全',
    'safe': '安全',
    'dangerous': '危险',
    'risky': '有风险',
    'hazardous': '危险',
    'harmful': '有害',
    'toxic': '有毒',
    'poisonous': '有毒',
    'deadly': '致命',
    'fatal': '致命',
    'lethal': '致命',
    'safe': '安全',
    'secure': '安全',
    'protected': '受保护',
    'vulnerable': '脆弱',
    'exposed': '暴露',
    'at risk': '有风险',
    'threatened': '受威胁',
    'endangered': '濒危',
    'extinct': '灭绝',
    'alive': '活着',
    'dead': '死亡',
    'living': '活着',
    'lifeless': '无生命',
    'animate': '有生命',
    'inanimate': '无生命',
    'organic': '有机',
    'inorganic': '无机',
    'natural': '自然',
    'artificial': '人工',
    'synthetic': '合成',
    'real': '真实',
    'fake': '假',
    'genuine': '真正',
    'authentic': '真实',
    'original': '原始',
    'copy': '复制',
    'duplicate': '重复',
    'replica': '复制品',
    'imitation': '模仿',
    'counterfeit': '假冒',
    'fraud': '欺诈',
    'scam': '骗局',
    'trick': '诡计',
    'deception': '欺骗',
    'lie': '谎言',
    'truth': '真相',
    'fact': '事实',
    'fiction': '虚构',
    'reality': '现实',
    'fantasy': '幻想',
    'dream': '梦想',
    'nightmare': '噩梦',
    'hope': '希望',
    'fear': '恐惧',
    'worry': '担心',
    'anxiety': '焦虑',
    'stress': '压力',
    'tension': '紧张',
    'relaxation': '放松',
    'calm': '平静',
    'peace': '和平',
    'war': '战争',
    'conflict': '冲突',
    'fight': '战斗',
    'battle': '战斗',
    'struggle': '斗争',
    'competition': '竞争',
    'contest': '比赛',
    'game': '游戏',
    'play': '玩',
    'fun': '乐趣',
    'enjoyment': '享受',
    'pleasure': '快乐',
    'happiness': '幸福',
    'joy': '喜悦',
    'sadness': '悲伤',
    'sorrow': '悲伤',
    'grief': '悲伤',
    'pain': '痛苦',
    'suffering': '痛苦',
    'hurt': '伤害',
    'injury': '伤害',
    'wound': '伤口',
    'damage': '损害',
    'harm': '伤害',
    'injury': '伤害',
    'wound': '伤口',
    'cut': '切',
    'bruise': '瘀伤',
    'burn': '烧伤',
    'scrape': '擦伤',
    'scratch': '抓伤',
    'bite': '咬',
    'sting': '刺',
    'prick': '刺',
    'stab': '刺',
    'pierce': '刺穿',
    'penetrate': '穿透',
    'enter': '进入',
    'exit': '退出',
    'leave': '离开',
    'arrive': '到达',
    'come': '来',
    'go': '去',
    'move': '移动',
    'stay': '停留',
    'remain': '保持',
    'continue': '继续',
    'stop': '停止',
    'pause': '暂停',
    'wait': '等待',
    'delay': '延迟',
    'hurry': '匆忙',
    'rush': '匆忙',
    'speed': '速度',
    'slow': '慢',
    'fast': '快',
    'quick': '快',
    'rapid': '快速',
    'swift': '快速',
    'instant': '瞬间',
    'immediate': '立即',
    'sudden': '突然',
    'gradual': '逐渐',
    'progressive': '渐进',
    'step': '步骤',
    'stage': '阶段',
    'phase': '阶段',
    'period': '时期',
    'time': '时间',
    'moment': '时刻',
    'instant': '瞬间',
    'second': '秒',
    'minute': '分钟',
    'hour': '小时',
    'day': '天',
    'week': '周',
    'month': '月',
    'year': '年',
    'decade': '十年',
    'century': '世纪',
    'millennium': '千年',
    'age': '年龄',
    'era': '时代',
    'epoch': '时代',
    'generation': '一代',
    'lifetime': '一生',
    'forever': '永远',
    'never': '从不',
    'always': '总是',
    'sometimes': '有时',
    'often': '经常',
    'rarely': '很少',
    'seldom': '很少',
    'occasionally': '偶尔',
    'frequently': '频繁',
    'constantly': '不断',
    'continuously': '连续',
    'permanently': '永久',
    'temporarily': '临时',
    'briefly': '短暂',
    'shortly': '很快',
    'soon': '很快',
    'later': '后来',
    'earlier': '更早',
    'before': '之前',
    'after': '之后',
    'during': '期间',
    'while': '当...时',
    'since': '自从',
    'until': '直到',
    'till': '直到',
    'from': '从',
    'to': '到',
    'toward': '朝向',
    'away': '离开',
    'near': '接近',
    'far': '远',
    'close': '近',
    'distant': '遥远',
    'local': '本地',
    'remote': '远程',
    'nearby': '附近',
    'adjacent': '相邻',
    'next': '下一个',
    'previous': '上一个',
    'last': '最后',
    'first': '第一',
    'second': '第二',
    'third': '第三',
    'fourth': '第四',
    'fifth': '第五',
    'sixth': '第六',
    'seventh': '第七',
    'eighth': '第八',
    'ninth': '第九',
    'tenth': '第十',
    'eleventh': '第十一',
    'twelfth': '第十二',
    'thirteenth': '第十三',
    'fourteenth': '第十四',
    'fifteenth': '第十五',
    'sixteenth': '第十六',
    'seventeenth': '第十七',
    'eighteenth': '第十八',
    'nineteenth': '第十九',
    'twentieth': '第二十',
    'twenty-first': '第二十一',
    'twenty-second': '第二十二',
    'twenty-third': '第二十三',
    'twenty-fourth': '第二十四',
    'twenty-fifth': '第二十五',
    'twenty-sixth': '第二十六',
    'twenty-seventh': '第二十七',
    'twenty-eighth': '第二十八',
    'twenty-ninth': '第二十九',
    'thirtieth': '第三十',
    'thirty-first': '第三十一',
    'thirty-second': '第三十二',
    'thirty-third': '第三十三',
    'thirty-fourth': '第三十四',
    'thirty-fifth': '第三十五',
    'thirty-sixth': '第三十六',
    'thirty-seventh': '第三十七',
    'thirty-eighth': '第三十八',
    'thirty-ninth': '第三十九',
    'fortieth': '第四十',
    'forty-first': '第四十一',
    'forty-second': '第四十二',
    'forty-third': '第四十三',
    'forty-fourth': '第四十四',
    'forty-fifth': '第四十五',
    'forty-sixth': '第四十六',
    'forty-seventh': '第四十七',
    'forty-eighth': '第四十八',
    'forty-ninth': '第四十九',
    'fiftieth': '第五十',
    'fifty-first': '第五十一',
    'fifty-second': '第五十二',
    'fifty-third': '第五十三',
    'fifty-fourth': '第五十四',
    'fifty-fifth': '第五十五',
    'fifty-sixth': '第五十六',
    'fifty-seventh': '第五十七',
    'fifty-eighth': '第五十八',
    'fifty-ninth': '第五十九',
    'sixtieth': '第六十',
    'sixty-first': '第六十一',
    'sixty-second': '第六十二',
    'sixty-third': '第六十三',
    'sixty-fourth': '第六十四',
    'sixty-fifth': '第六十五',
    'sixty-sixth': '第六十六',
    'sixty-seventh': '第六十七',
    'sixty-eighth': '第六十八',
    'sixty-ninth': '第六十九',
    'seventieth': '第七十',
    'seventy-first': '第七十一',
    'seventy-second': '第七十二',
    'seventy-third': '第七十三',
    'seventy-fourth': '第七十四',
    'seventy-fifth': '第七十五',
    'seventy-sixth': '第七十六',
    'seventy-seventh': '第七十七',
    'seventy-eighth': '第七十八',
    'seventy-ninth': '第七十九',
    'eightieth': '第八十',
    'eighty-first': '第八十一',
    'eighty-second': '第八十二',
    'eighty-third': '第八十三',
    'eighty-fourth': '第八十四',
    'eighty-fifth': '第八十五',
    'eighty-sixth': '第八十六',
    'eighty-seventh': '第八十七',
    'eighty-eighth': '第八十八',
    'eighty-ninth': '第八十九',
    'ninetieth': '第九十',
    'ninety-first': '第九十一',
    'ninety-second': '第九十二',
    'ninety-third': '第九十三',
    'ninety-fourth': '第九十四',
    'ninety-fifth': '第九十五',
    'ninety-sixth': '第九十六',
    'ninety-seventh': '第九十七',
    'ninety-eighth': '第九十八',
    'ninety-ninth': '第九十九',
    'hundredth': '第一百',
    'thousandth': '第一千',
    'millionth': '第一百万',
    'billionth': '第十亿',
    'trillionth': '第一万亿',
    'quadrillionth': '第一千万亿',
    'quintillionth': '第一百万亿',
    'sextillionth': '第一千万亿',
    'septillionth': '第一百万亿',
    'octillionth': '第一千万亿',
    'nonillionth': '第一百万亿',
    'decillionth': '第一千万亿',
    'undecillionth': '第一百万亿',
    'duodecillionth': '第一千万亿',
    'tredecillionth': '第一百万亿',
    'quattuordecillionth': '第一千万亿',
    'quindecillionth': '第一百万亿',
    'sexdecillionth': '第一千万亿',
    'septendecillionth': '第一百万亿',
    'octodecillionth': '第一千万亿',
    'novemdecillionth': '第一百万亿',
    'vigintillionth': '第一千万亿',
    'unvigintillionth': '第一百万亿',
    'duovigintillionth': '第一千万亿',
    'trevigintillionth': '第一百万亿',
    'quattuorvigintillionth': '第一千万亿',
    'quinvigintillionth': '第一百万亿',
    'sexvigintillionth': '第一千万亿',
    'septenvigintillionth': '第一百万亿',
    'octovigintillionth': '第一千万亿',
    'novemvigintillionth': '第一百万亿',
    'trigintillionth': '第一千万亿',
    'untrigintillionth': '第一百万亿',
    'duotrigintillionth': '第一千万亿',
    'tretrigintillionth': '第一百万亿',
    'quattuortrigintillionth': '第一千万亿',
    'quintrigintillionth': '第一百万亿',
    'sextrigintillionth': '第一千万亿',
    'septentrigintillionth': '第一百万亿',
    'octotrigintillionth': '第一千万亿',
    'novemtrigintillionth': '第一百万亿',
    'quadragintillionth': '第一千万亿',
    'unquadragintillionth': '第一百万亿',
    'duoquadragintillionth': '第一千万亿',
    'trequadragintillionth': '第一百万亿',
    'quattuorquadragintillionth': '第一千万亿',
    'quinquadragintillionth': '第一百万亿',
    'sexquadragintillionth': '第一千万亿',
    'septenquadragintillionth': '第一千万亿',
    'octoquadragintillionth': '第一千万亿',
    'novemquadragintillionth': '第一百万亿',
    'quinquagintillionth': '第一千万亿',
    'unquinquagintillionth': '第一百万亿',
    'duoquinquagintillionth': '第一千万亿',
    'trequinquagintillionth': '第一百万亿',
    'quattuorquinquagintillionth': '第一千万亿',
    'quinquinquagintillionth': '第一百万亿',
    'sexquinquagintillionth': '第一千万亿',
    'septenquinquagintillionth': '第一百万亿',
    'octoquinquagintillionth': '第一千万亿',
    'novemquinquagintillionth': '第一百万亿',
    'sexagintillionth': '第一千万亿',
    'unsexagintillionth': '第一百万亿',
    'duosexagintillionth': '第一千万亿',
    'tresexagintillionth': '第一百万亿',
    'quattuorsexagintillionth': '第一千万亿',
    'quinsexagintillionth': '第一百万亿',
    'sexsexagintillionth': '第一千万亿',
    'septensexagintillionth': '第一百万亿',
    'octosexagintillionth': '第一千万亿',
    'novemsexagintillionth': '第一千万亿',
    'septuagintillionth': '第一千万亿',
    'unseptuagintillionth': '第一百万亿',
    'duoseptuagintillionth': '第一千万亿',
    'treseptuagintillionth': '第一千万亿',
    'quattuorseptuagintillionth': '第一千万亿',
    'quinseptuagintillionth': '第一百万亿',
    'sexseptuagintillionth': '第一百万亿',
    'septenseptuagintillionth': '第一百万亿',
    'octoseptuagintillionth': '第一千万亿',
    'novemseptuagintillionth': '第一百万亿',
    'octogintillionth': '第一千万亿',
    'unoctogintillionth': '第一百万亿',
    'duooctogintillionth': '第一千万亿',
    'treoctogintillionth': '第一千万亿',
    'quattuoroctogintillionth': '第一千万亿',
    'quinoctogintillionth': '第一百万亿',
    'sexoctogintillionth': '第一千万亿',
    'septenoctogintillionth': '第一百万亿',
    'octooctogintillionth': '第一千万亿',
    'novemoctogintillionth': '第一千万亿',
    'nonagintillionth': '第一千万亿',
    'unnonagintillionth': '第一百万亿',
    'duononagintillionth': '第一千万亿',
    'trenonagintillionth': '第一千万亿',
    'quattuornonagintillionth': '第一千万亿',
    'quinnonagintillionth': '第一百万亿',
    'sexnonagintillionth': '第一千万亿',
    'septennonagintillionth': '第一百万亿',
    'octononagintillionth': '第一千万亿',
    'novemnonagintillionth': '第一千万亿',
    'centillionth': '第一千万亿'
  };

  // Simple word-by-word translation
  const words = text.toLowerCase().split(/\s+/);
  const translatedWords = words.map(word => {
    // Remove punctuation for lookup
    const cleanWord = word.replace(/[^\w]/g, '');
    return translations[cleanWord] || word;
  });

  return translatedWords.join(' ');
}

// Use OpenAI for translation if available
async function translateWithOpenAI(text: string): Promise<string> {
  const openaiApiKey = process.env.OPENAI_API_KEY;
  
  if (!openaiApiKey) {
    console.log('No OpenAI API key found, using simple translation');
    return simpleTranslate(text);
  }

  try {
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openaiApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        messages: [
          {
            role: 'system',
            content: 'You are a financial news translator. Translate the following English financial news headline into Chinese. Keep it concise and professional, suitable for voice broadcast.'
          },
          {
            role: 'user',
            content: text
          }
        ],
        max_tokens: 100,
        temperature: 0.3,
      }),
    });

    if (!response.ok) {
      throw new Error('OpenAI API request failed');
    }

    const data = await response.json();
    return data.choices[0]?.message?.content?.trim() || simpleTranslate(text);
  } catch (error) {
    console.error('OpenAI translation failed:', error);
    return simpleTranslate(text);
  }
}

export async function POST(request: NextRequest) {
  try {
    const { newsItems }: { newsItems: NewsItem[] } = await request.json();

    if (!newsItems || !Array.isArray(newsItems)) {
      return NextResponse.json(
        { error: 'Invalid news items provided' },
        { status: 400 }
      );
    }

    // Score and sort headlines by importance
    const scoredHeadlines = newsItems.map(item => ({
      ...item,
      score: scoreHeadline(item.title, item.description)
    }));

    // Sort by score (highest first) and take top 3
    const topHeadlines = scoredHeadlines
      .sort((a, b) => b.score - a.score)
      .slice(0, 3);

    // Translate headlines to Chinese
    const translatedHeadlines: TranslatedHeadline[] = await Promise.all(
      topHeadlines.map(async (item) => {
        const title_zh = await translateWithOpenAI(item.title);
        return {
          title_zh,
          source: item.source,
          url: item.link,
          score: item.score
        };
      })
    );

    return NextResponse.json({
      headlines: translatedHeadlines,
      total: newsItems.length,
      top_3_selected: translatedHeadlines.length
    });

  } catch (error) {
    console.error('Error processing finance brief:', error);
    return NextResponse.json(
      { error: 'Failed to process finance brief' },
      { status: 500 }
    );
  }
}
